---
components:
  schemas:
    .bookstore.v1.Author:
      properties:
        firstName:
          type: string
        gender:
          enum:
            - GENDER_UNSPECIFIED
            - GENDER_MALE
            - GENDER_FEMALE
          type: string
        id:
          format: int64
          type: string
        lname:
          type: string
      type: object
    .bookstore.v1.Book:
      properties:
        author:
          type: string
        id:
          format: int64
          type: string
        quotes:
          items:
            type: string
          nullable: true
          type: array
        title:
          type: string
      type: object
    .bookstore.v1.CreateBookRequestInput:
      properties:
        book:
          $ref: '#/components/schemas/.bookstore.v1.Book'
      type: object
    .bookstore.v1.CreateBookResponse:
      properties:
        book:
          $ref: '#/components/schemas/.bookstore.v1.Book'
      type: object
    .bookstore.v1.CreateShelfRequest:
      properties:
        shelf:
          $ref: '#/components/schemas/.bookstore.v1.Shelf'
      type: object
    .bookstore.v1.CreateShelfResponse:
      properties:
        shelf:
          $ref: '#/components/schemas/.bookstore.v1.Shelf'
      type: object
    .bookstore.v1.DeleteBookRequestInput:
      type: object
    .bookstore.v1.DeleteBookResponse:
      type: object
    .bookstore.v1.DeleteShelfRequestInput:
      type: object
    .bookstore.v1.DeleteShelfResponse:
      type: object
    .bookstore.v1.GetAuthorResponse:
      properties:
        author:
          $ref: '#/components/schemas/.bookstore.v1.Author'
      type: object
    .bookstore.v1.GetBookResponse:
      properties:
        book:
          $ref: '#/components/schemas/.bookstore.v1.Book'
      type: object
    .bookstore.v1.ListShelvesResponse:
      properties:
        shelves:
          items:
            $ref: '#/components/schemas/.bookstore.v1.Shelf'
          nullable: true
          type: array
      type: object
    .bookstore.v1.Shelf:
      properties:
        id:
          format: int64
          type: string
        search%5Bencoded%5D:
          type: string
        search[decoded]:
          type: string
        theme:
          type: string
      type: object
    .bookstore.v1.UpdateBookRequestInput:
      properties:
        book:
          $ref: '#/components/schemas/.bookstore.v1.Book'
      type: object
    .bookstore.v1.UpdateBookResponse:
      properties:
        book:
          $ref: '#/components/schemas/.bookstore.v1.Book'
      type: object
info:
  description: |
    This is an auto-generated API for .bookstore.v1.BookstoreService.
  title: API For .bookstore.v1.BookstoreService
  version: 0.0.1
openapi: 3.1.0
paths:
  /authors/{author}:
    get:
      operationId: .bookstore.v1.BookstoreService.GetAuthor
      parameters:
        - in: path
          name: author
          required: true
          schema:
            format: int64
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.GetAuthorResponse'
          description: Succesful response
  /shelf:
    post:
      operationId: .bookstore.v1.BookstoreService.CreateShelf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/.bookstore.v1.CreateShelfRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.CreateShelfResponse'
          description: Succesful response
  /shelves:
    get:
      operationId: .bookstore.v1.BookstoreService.ListShelves
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.ListShelvesResponse'
          description: |2
             Response to ListShelves call.
  /shelves/{shelf}:
    delete:
      operationId: .bookstore.v1.BookstoreService.DeleteShelf
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            format: int64
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/.bookstore.v1.DeleteShelfRequestInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.DeleteShelfResponse'
          description: Succesful response
  /shelves/{shelf}/books:
    post:
      operationId: .bookstore.v1.BookstoreService.CreateBook
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            format: int64
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/.bookstore.v1.CreateBookRequestInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.CreateBookResponse'
          description: Succesful response
  /shelves/{shelf}/books/{book.id}:
    patch:
      operationId: .bookstore.v1.BookstoreService.UpdateBook
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: book.id
          required: true
          schema:
            format: int64
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/.bookstore.v1.UpdateBookRequestInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.UpdateBookResponse'
          description: Succesful response
  /shelves/{shelf}/books/{book}:
    delete:
      operationId: .bookstore.v1.BookstoreService.DeleteBook
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: book
          required: true
          schema:
            format: int64
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/.bookstore.v1.DeleteBookRequestInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.DeleteBookResponse'
          description: Succesful response
    get:
      operationId: .bookstore.v1.BookstoreService.GetBook
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            format: int64
            type: string
        - in: path
          name: book
          required: true
          schema:
            format: int64
            type: string
        - in: query
          name: author
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/.bookstore.v1.GetBookResponse'
          description: Succesful response
